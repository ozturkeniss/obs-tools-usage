name: Auto Release Bot

on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Weekly on Sunday at midnight UTC
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Type of release to create'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  # Create patch release
  patch-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.release_type == 'patch')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
    
    - name: Get latest tag
      id: get-tag
      run: |
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
        
        # Extract version number
        VERSION=$(echo $LATEST_TAG | sed 's/v//')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Increment patch version
        NEW_VERSION=$(echo $VERSION | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "new_tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
    
    - name: Create release notes
      run: |
        cat > RELEASE_NOTES.md << EOF
        # Release v${{ steps.get-tag.outputs.new_version }}
        
        ## 🚀 What's New
        - Automated patch release
        - Bug fixes and improvements
        - Performance optimizations
        - Security updates
        
        ## 📋 Changes
        - Fixed minor bugs
        - Improved error handling
        - Enhanced logging
        - Updated dependencies
        
        ## 🧪 Testing
        - All tests passing
        - Security scans clean
        - Performance tests passed
        
        ## 📦 Installation
        \`\`\`bash
        # Using Helm
        helm install obs-tools-usage ./helm
        
        # Using Docker
        docker pull ghcr.io/${{ github.repository }}/gateway:latest
        docker pull ghcr.io/${{ github.repository }}/product-service:latest
        docker pull ghcr.io/${{ github.repository }}/basket-service:latest
        docker pull ghcr.io/${{ github.repository }}/payment-service:latest
        \`\`\`
        
        ## 🔄 Upgrade
        \`\`\`bash
        # Using Helm
        helm upgrade obs-tools-usage ./helm
        
        # Using Terraform
        terraform apply
        \`\`\`
        
        ---
        *Generated by GitHub Action Bot on $(date -u '+%Y-%m-%d %H:%M:%S UTC')*
        EOF
    
    - name: Create release
      uses: actions/github-script@v7
      with:
        script: |
          const { data: release } = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: '${{ steps.get-tag.outputs.new_tag }}',
            name: 'Release ${{ steps.get-tag.outputs.new_tag }}',
            body: `# Release ${{ steps.get-tag.outputs.new_tag }}
            
            ## 🚀 What's New
            - Automated patch release
            - Bug fixes and improvements
            - Performance optimizations
            - Security updates
            
            ## 📋 Changes
            - Fixed minor bugs
            - Improved error handling
            - Enhanced logging
            - Updated dependencies
            
            ## 🧪 Testing
            - All tests passing
            - Security scans clean
            - Performance tests passed
            
            ## 📦 Installation
            \`\`\`bash
            # Using Helm
            helm install obs-tools-usage ./helm
            
            # Using Docker
            docker pull ghcr.io/${{ github.repository }}/gateway:latest
            docker pull ghcr.io/${{ github.repository }}/product-service:latest
            docker pull ghcr.io/${{ github.repository }}/basket-service:latest
            docker pull ghcr.io/${{ github.repository }}/payment-service:latest
            \`\`\`
            
            ## 🔄 Upgrade
            \`\`\`bash
            # Using Helm
            helm upgrade obs-tools-usage ./helm
            
            # Using Terraform
            terraform apply
            \`\`\`
            
            ---
            *Generated by GitHub Action Bot on ${new Date().toISOString()}*`,
            draft: false,
            prerelease: false
          });
          
          console.log('Created release:', release.html_url);
          core.setOutput('release_url', release.html_url);

  # Create minor release
  minor-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.release_type == 'minor'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
    
    - name: Get latest tag
      id: get-tag
      run: |
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
        
        # Extract version number
        VERSION=$(echo $LATEST_TAG | sed 's/v//')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Increment minor version
        NEW_VERSION=$(echo $VERSION | awk -F. '{$2 = $2 + 1; $3 = 0;} 1' | sed 's/ /./g')
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "new_tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
    
    - name: Create release
      uses: actions/github-script@v7
      with:
        script: |
          const { data: release } = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: '${{ steps.get-tag.outputs.new_tag }}',
            name: 'Release ${{ steps.get-tag.outputs.new_tag }}',
            body: `# Release ${{ steps.get-tag.outputs.new_tag }}
            
            ## 🚀 What's New
            - New features and enhancements
            - Improved user experience
            - Performance improvements
            - Security enhancements
            
            ## 📋 Changes
            - Added new features
            - Enhanced functionality
            - Improved performance
            - Updated dependencies
            
            ## 🧪 Testing
            - All tests passing
            - Security scans clean
            - Performance tests passed
            - Integration tests passed
            
            ## 📦 Installation
            \`\`\`bash
            # Using Helm
            helm install obs-tools-usage ./helm
            
            # Using Docker
            docker pull ghcr.io/${{ github.repository }}/gateway:latest
            docker pull ghcr.io/${{ github.repository }}/product-service:latest
            docker pull ghcr.io/${{ github.repository }}/basket-service:latest
            docker pull ghcr.io/${{ github.repository }}/payment-service:latest
            \`\`\`
            
            ## 🔄 Upgrade
            \`\`\`bash
            # Using Helm
            helm upgrade obs-tools-usage ./helm
            
            # Using Terraform
            terraform apply
            \`\`\`
            
            ---
            *Generated by GitHub Action Bot on ${new Date().toISOString()}*`,
            draft: false,
            prerelease: false
          });
          
          console.log('Created release:', release.html_url);
          core.setOutput('release_url', release.html_url);

  # Create major release
  major-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.release_type == 'major'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Configure Git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action Bot"
    
    - name: Get latest tag
      id: get-tag
      run: |
        LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        echo "latest_tag=$LATEST_TAG" >> $GITHUB_OUTPUT
        
        # Extract version number
        VERSION=$(echo $LATEST_TAG | sed 's/v//')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Increment major version
        NEW_VERSION=$(echo $VERSION | awk -F. '{$1 = $1 + 1; $2 = 0; $3 = 0;} 1' | sed 's/ /./g')
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "new_tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
    
    - name: Create release
      uses: actions/github-script@v7
      with:
        script: |
          const { data: release } = await github.rest.repos.createRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            tag_name: '${{ steps.get-tag.outputs.new_tag }}',
            name: 'Release ${{ steps.get-tag.outputs.new_tag }}',
            body: `# Release ${{ steps.get-tag.outputs.new_tag }}
            
            ## 🚀 What's New
            - Major new features
            - Significant improvements
            - Performance enhancements
            - Security updates
            
            ## 📋 Changes
            - Added major new features
            - Enhanced functionality
            - Improved performance
            - Updated dependencies
            - Breaking changes (see migration guide)
            
            ## 🧪 Testing
            - All tests passing
            - Security scans clean
            - Performance tests passed
            - Integration tests passed
            - Load tests passed
            
            ## 📦 Installation
            \`\`\`bash
            # Using Helm
            helm install obs-tools-usage ./helm
            
            # Using Docker
            docker pull ghcr.io/${{ github.repository }}/gateway:latest
            docker pull ghcr.io/${{ github.repository }}/product-service:latest
            docker pull ghcr.io/${{ github.repository }}/basket-service:latest
            docker pull ghcr.io/${{ github.repository }}/payment-service:latest
            \`\`\`
            
            ## 🔄 Upgrade
            \`\`\`bash
            # Using Helm
            helm upgrade obs-tools-usage ./helm
            
            # Using Terraform
            terraform apply
            \`\`\`
            
            ## ⚠️ Breaking Changes
            - See migration guide for breaking changes
            - Update configuration files
            - Review API changes
            
            ---
            *Generated by GitHub Action Bot on ${new Date().toISOString()}*`,
            draft: false,
            prerelease: false
          });
          
          console.log('Created release:', release.html_url);
          core.setOutput('release_url', release.html_url);
